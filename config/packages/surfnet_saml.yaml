parameters:
  # The relay state values that will cause the SamlAuthenticator from not handling the SAML response.
  # Used for test and self asserted token registration authentications
  rejected_relay_states: ['isTestRequest', 'isSatRequest', 'isGssfRequest']
  # SAML Bundle SamlAuthenticator configuration
  # The acs location that the SAML response must be posted to (used in SamlAuthenticator::supports)
  acs_location_route_name: selfservice_serviceprovider_consume_assertion

surfnet_saml:
  enable_authentication: true
  hosted:
    attribute_dictionary:
      ignore_unknown_attributes: true
    service_provider:
      enabled: true
      assertion_consumer_route: selfservice_serviceprovider_consume_assertion
      public_key: "%saml_sp_publickey%"
      private_key: "%saml_sp_privatekey%"
    metadata:
      entity_id_route: selfservice_saml_metadata
      public_key: "%saml_metadata_publickey%"
      private_key: "%saml_metadata_privatekey%"
  remote:
    identity_provider:
      enabled: true
      entity_id: "%saml_remote_idp_entity_id%"
      sso_url: "%saml_remote_idp_sso_url%"
      certificate: "%saml_remote_idp_certificate%"

when@test:
  surfnet_saml:
    hosted:
      service_provider:
        public_key: /vagrant/deploy/tests/behat/fixtures/test_public_key.crt
        private_key: /vagrant/deploy/tests/behat/fixtures/test_private_key.key
      metadata:
        public_key: /vagrant/deploy/tests/behat/fixtures/test_public_key.crt
        private_key: /vagrant/deploy/tests/behat/fixtures/test_private_key.key
    remote:
      identity_provider:
        certificate: "%saml_remote_idp_certificate%"
