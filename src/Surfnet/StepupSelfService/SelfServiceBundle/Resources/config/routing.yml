ss_entry_point:
    path:     /
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:EntryPoint:decideSecondFactorFlow }

ss_second_factor_list:
    path:     /overview
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SecondFactor:list }

ss_second_factor_test:
    path:     /second-factor/test
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Saml:testSecondFactor }

ss_second_factor_revoke:
    path:     /second-factor/{state}/{secondFactorId}/revoke
    methods:  [GET,POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SecondFactor:revoke }
    requirements:
        state: '^(unverified|verified|vetted)$'

ss_second_factor_vetting_types:
    path:     /second-factor/{secondFactorId}/vetting-types
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration:displayVettingTypes }

ss_second_factor_self_vet:
    path:     /second-factor/{secondFactorId}/self-vet
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfVet:selfVet }

ss_second_factor_self_vet_consume_assertion:
    path:     /second-factor/{secondFactorId}/self-vet-consume-assertion
    methods:  [POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfVet:consumeSelfVetAssertion }

ss_second_factor_self_asserted_tokens:
    path:     /second-factor/{secondFactorId}/self-asserted-token-registration
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfAssertedTokens:selfAssertedTokenRegistration }

ss_second_factor_self_asserted_tokens_recovery_token:
    path:     /second-factor/{secondFactorId}/self-asserted-token-registration/{recoveryTokenId}
    methods:  [GET,POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfAssertedTokens:selfAssertedTokenRegistrationRecoveryToken }

ss_second_factor_self_asserted_tokens_recovery_token_sms:
    path:     /second-factor/{secondFactorId}/self-asserted-token-registration/{recoveryTokenId}/authenticate
    methods:  [GET,POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfAssertedTokens:selfAssertedTokenRecoveryTokenSmsAuthentication }

ss_second_factor_new_recovery_token:
    path:     /second-factor/{secondFactorId}/new-recovery-token
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfAssertedTokens:newRecoveryToken }

ss_registration_recovery_token_safe_store:
    path:     /second-factor/{secondFactorId}/safe-store
    methods:  [GET,POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfAssertedTokens:registerCreateRecoveryTokenSafeStore }

ss_recovery_token_display_types:
    path: /recovery-token/select-recovery-token
    methods: [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfAssertedTokens:selectTokenType }

ss_recovery_token_safe_store:
    path: /recovery-token/create-safe-store
    methods: [GET, POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfAssertedTokens:createSafeStore }

ss_recovery_token_delete:
    path: /recovery-token/delete/{recoveryTokenId}
    methods: [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfAssertedTokens:delete }

ss_recovery_token_sms:
    path: /recovery-token/create-sms
    methods: [GET, POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfAssertedTokens:createSms }

ss_recovery_token_prove_sms_possession:
    path: /recovery-token/prove-sms-possession
    methods: [GET, POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfAssertedTokens:proveSmsPossession }

ss_registration_recovery_token_sms:
    path:     /second-factor/{secondFactorId}/sms
    methods:  [GET, POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfAssertedTokens:registerRecoveryTokenSms }

ss_registration_recovery_token_sms_proof_of_possession:
    path: /recovery-token/{secondFactorId}/prove-sms-possession
    methods: [GET, POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:SelfAssertedTokens:registerRecoveryTokenSmsProofOfPossession }

ss_registration_display_types:
    path:     /registration/select-token
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration:displaySecondFactorTypes }

ss_registration_email_verification_email_sent:
    path:     /registration/{secondFactorId}/email-verification-email-sent
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration:emailVerificationEmailSent }

ss_registration_verify_email:
    path:     /verify-email
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration:verifyEmail }

ss_registration_registration_email_sent:
    path:     /registration/{secondFactorId}/registration-email-sent
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration:registrationEmailSent }

ss_registration_registration_pdf:
    path:     /registration/{secondFactorId}/registration-pdf
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration:registrationPdf }

ss_registration_yubikey_prove_possession:
    path:     /registration/yubikey/prove-possession
    methods:  [GET,POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration/Yubikey:provePossession }

ss_registration_sms_send_challenge:
    path:     /registration/sms/send-challenge
    methods:  [GET,POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration/Sms:sendChallenge }

ss_registration_sms_prove_possession:
    path:     /registration/sms/prove-possession
    methods:  [GET,POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration/Sms:provePossession }

ss_registration_gssf_status_report:
    path:     /registration/gssf/{provider}/status
    methods:  [GET]
    defaults:
        _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration/Gssf:status
        authenticationFailed: false
        proofOfPossessionFailed: false

ss_registration_gssf_authenticate:
    path:     /registration/gssf/{provider}/authenticate
    methods:  [POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration/Gssf:authenticate }

ss_registration_gssf_saml_metadata:
    path:     /registration/gssf/{provider}/metadata
    methods:  [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration/Gssf:metadata }

ss_registration_gssf_consume_assertion:
    path:     /registration/gssf/{provider}/consume-assertion
    methods:  [POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Registration/Gssf:consumeAssertion }

selfservice_saml_metadata:
    path: /authentication/metadata
    methods: [GET]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Saml:metadata }

selfservice_serviceprovider_consume_assertion:
    path: /authentication/consume-assertion
    methods: [POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Saml:consumeAssertion }

selfservice_security_session_expired:
    path: /authentication/session-expired
    methods: [GET]
    defaults:
        _controller: SurfnetStepupSelfServiceSelfServiceBundle:Security:sessionExpired

ss_switch_locale:
    path:     /switch-locale
    methods:  [POST]
    defaults: { _controller: SurfnetStepupSelfServiceSelfServiceBundle:Locale:switchLocale }
    requirements:
        'return-url': '.+'
